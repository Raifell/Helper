import numpy as np

a = np.array([1, 2, 3, 4, 5, 6]) # Создание простого одномерного массива
b = a.copy() # Копия массива

a = np.zeros((2, 5)) # Создение двумерного массива заполненного нулями
a = np.ones((2, 5), 'int') #float/int/string/bool/unit/complex приваивает значения заполнению

b = a.copy()[0][2] # Обращение к элементам по индексу

a = np.arange(10, 100, 5) # Построение одномерного массива с числами от 10 до 100 с шагом 5 (Не включая 100)
a = np.arange(10) # При передаче одного параметра, будет построен список до указаного числа (Не включая его)
a = np.arange(10, 20) # Построение массива с диапазоном значений, без шага

a = np.ones((2, 5))
b = a.astype('str') # Копирование массива с изменением формата данных (np.sctypes)

a = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])
b = a[:, 1] # В отличие от простого списка, в массиве можно обращаться к индексам второй оси

a = np.arange(5)
b = a[[0, 1, -1]] # Передача списка с индексами для одномерного массива
b = a[0:4:2] # Передача диапазона индексов от 0 до 4 с шагом 2

a = np.array([[1, 2, 3], [4, 5, 6]])
b = a[:, ::-1] # Разворот массива по второй оси (вариант передачи одного, последнего параметра)
b[0, 0] = 0 # В случае отсутствия копии, данная замена, изменит массив a

# Присваивание переменной b[индекс] значения измененного варианта массива a, меняет данные самого массива,
# для того, что бы недопустить этого, необходимо сделать копию и работать уже с ней

a = np.arange(24) # Одномерный массив с данными от 0 до 23
b = a.reshape(4, 6) # Матрица 4х6 с данными от 0 до 23
c = a.reshape(4, 3, 2) # Многомерный массив - 4 подмассива размером 3х2

# Метод reshape изменяет фигурное построение относительно изначального
# Метод shape задает изначальное фигурное построение
# Фигурное построение строк и столбцов должно быть эквивалентно изначальному значению

a = np.arange(24)
b = a.reshape(4, 3, 2)

print(b.ndim, b.shape, a.size) # Кол-во осей, Фигурные данные, Размер

a = np.ones((2, 4), 'int')
b = a.copy().ravel() # Представение многомерного массива в одномерном виде

a = np.arange(24)
b = a.reshape(4, -1) # Указание автоматического значения для столбцов
c = a.reshape(4, -1, 2) # Указание автоматического значения для строк
